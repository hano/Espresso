#! /bin/sh
set -xeuf

# configuration
export build_dir="${build_dir-$PWD}"
export sdk="${sdk}"
export mode="${mode-debug}"
export activity="${activity-MyActivity}"
export package="${package-com.test.mypackage}"

if test "$mode" = release; then
  export keystore="${keystore}"
  export keyalias="${keyalias}"
  # optional: storepass, keypass
fi

# sanity-check configuration
validate-sdk
validate-mode
validate-activity
validate-package
validate-build_dir

if test "$mode" = release; then
  validate-keystore
  # TODO validate-keyalias
fi

# setup self-destructive working directory
cd "`mktemp -d -t Espresso-package-cordova-android.XXXXXXXXXX`"
if echo "${ESPRESSO_DEBUG-}" | grep -q package; then
  : debugging espresso package
else
  # activate self-destructive if we're not debugging this component
  trap "cd '$OLDPWD'; rm -fR '$PWD'" EXIT INT QUIT
fi
ln -s "$applicationDirectory" app

# create android project directory
if test -n "${proj_skel-}"; then
  # TODO? validate proj_skel
  cp -R "$proj_skel" android-project
else
  cordova_home="$ROOT/../submodules/git-wip-us.apache.org/repos/asf/incubator-cordova-android"
  cordova_version="$(cat "$cordova_home/VERSION")"

  (
    mkdir cordova
    cd cordova
    tar -C "$cordova_home" -c . | tar -xp

    gsedi bin/create '
      s/sed -i .. -e \("[^"]*"\) \(.*\)/gsedi "\2" \1/
    '

    unset POSIXLY_CORRECT
    # TODO modify bin/create's TARGET to match ours!
    bin/create "$OLDPWD/android-project" "$package" "$activity"
  )
fi

# copy application files into android project directory
xcopy-htmlapp "$build_dir" android-project/assets/www

# sanitize application files
gsedi android-project/assets/www/index.html '
  s|\(</\?\)[sS][cC][rR][iI][pP][tT]|\1script|g
  s|\(<script[^>]*\) type="[^/]*/javascript"\([^>]*>\)|\1\2|g;
'

# update android project files to use Cordova
gsedi android-project/src/`echo $package | tr . /`/$activity.java '
  s|^\([ ]*\)\(super.loadUrl(.*);.*\)|\1super.setIntegerProperty("loadUrlTimeoutValue", 60000);\
\1\2|
'
gsedi android-project/assets/www/index.html '
  1,/<script/s|\(.*\)\(<\(script\).*\)|\1\<\3 src="cordova-'"`
    echo $cordova_version
  `"'.js"></\3>\
<\3>var isPhoneGap = true;</\3>\
\2|
'

setup-icons
setup-splash
setup-manifest
add-plugins

# build android package
(cd android-project && ant --noconfig "$mode")

# sign-and-align-apk
apk_basename="$activity-$mode"
if test "$mode" = release; then
  # TODO? find the only apk in bin
  if ! test -e android-project/bin/$apk_basename-unsigned.apk; then
    apk_basename="$activity"
    if ! test -e android-project/bin/$apk_basename-unsigned.apk; then
      echo "No .apk-file found (this should not happen)." >&2
      exit 23
    fi
  fi
  # sign and align android package in release mode
  jarsigner -verbose \
      -keystore "$keystore" \
      ${storepass+-storepass "$storepass"} \
      ${keypass+-keypass "$keypass"} \
      -signedjar android-project/bin/$apk_basename-unaligned.apk \
      android-project/bin/$apk_basename-unsigned.apk \
      "$keyalias"
  zipalign -v 4 android-project/bin/$apk_basename-unaligned.apk \
      android-project/bin/$apk_basename.apk
fi

# emit android package
cp android-project/bin/$apk_basename.apk "$build_dir"
